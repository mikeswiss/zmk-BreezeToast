/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {

// Ref: https://zmkfirmware.dev/docs/codes/

// ----------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3    |  4   |  5   |                               |  6   |  7    |  8    |  9   |   0   | -/_  | |  +=  | BKSP | PG UP|
// |  TAB  |  Q  |  W  |  E    |  R   |  T   |                               |  Y   |  U    |  I    |  O   |   P   |  [{   | |  ]}  |    \|   | PG DN|
// |  CAPS |  A  |  S  |  D    |  F   |  G   |                               |  H   |  J    |  K    |  L   |   ;   |  '   | |     |    UP   |      |
// |  SHFT |  Z  |  X  |  C    |  V   |  B   |                               |  N   |  M    |  ,    |  .   |   /   |  RET | |  L  |    DN   |  R   |
//                     |  GUI  | ALT  | LCTRL | LOWER/SPACE |   | RAISE/SPACE | BSPC |  DEL  | CTRL  |
			bindings = <
&kp ESC   &kp N1 &kp N2 &kp N3 &kp N4 &kp N5         	&kp N6 &kp N7 &kp N8    &kp N9   &kp N0    &kp MINUS               &kp EQUAL &kp BSPC &kp EQUAL
&kp  TAB   &kp Q  &kp W  &kp E  &kp R  &kp T       	&kp Y  &kp U  &kp I     &kp O    &kp P     &kp LEFT_BRACKET                &kp RBKT &kp BACKSLASH        &kp RBKT
&kp CAPS  &kp A  &kp S  &kp D  &kp F  &kp G      	&kp H  &kp J  &kp K     &kp L    &kp SEMI  &kp APOS                         &kp UP
&kp LSHFT &kp Z  &kp X  &kp C  &kp V  &kp B        	&kp N  &kp M  &kp COMMA &kp DOT  &kp FSLH  &mt RSHFT RET           &kp LEFT &kp DOWN &kp RIGHT
       &kp LCTRL &kp LALT &kp LGUI &lt 1 SPACE      &lt 2 SPACE &kp BSPC &kp DEL &kp RCTRL
			>;
		};

		lower_layer {
// ---------------------------------------------------------------------------------------------------------------------------------- 
// |   F1  |  F2  |  F3 |  F4  |  F5   |  F6  |                   |  F7  |  F8  |  F9  |  F10 |  F11  |  F12  | | BTNXT | BTCLR|         | 
// |   `~    |      |     |      |       |  [   |                   |  ]   |      |      |      |       |  BSPC | |   +=   | Mute | Ply/PAS |
// |       | CMD-A|     |      |       |      |                   |      |      |      |      |       |       | |       | Vol+ |         |
// |  CAPS | CMD-Z| CUT | COPY | PASTE |  {   |                   |  }   |      |      |      |       |       | | Prev  | Vol- |   Next  | 
//                |     |      |       |      |       		  |  RET |      |      |ADJUST|
			bindings = <
&kp F1   &kp F2    &kp F3    &kp F4    &kp F5    &kp F6        		&kp F7 	 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12           &bt BT_NXT &bt BT_CLR   &trans
&trans   GRAVE    &trans    &trans    &trans    &kp LBKT        	&kp RBKT &trans &trans &trans  &trans  &kp BSPC      	 &kp EQUAL  &kp C_MUTE   &kp C_PLAY_PAUSE
&trans   &kp LG(A) &trans    &trans    &trans    &trans        		&trans   &trans &trans &trans  &trans  &trans            	    &kp C_VOL_UP
&kp CAPS &kp LG(Z) &kp LG(X) &kp LG(C) &kp LG(V) &kp LBRC		&kp RBRC &trans &trans &trans  &trans  &trans      	 &kp C_PREV &kp C_VOL_DN &kp C_NEXT
		    &trans &trans &trans &trans            &kp RET  &trans &trans &mo 3        
			>;
		};

		raise_layer {
// ---------------------------------------------------------------------------------------------------------------------------------- 
// |  F1 |  F2  |  F3  |  F4  |  F5  |  F6  |                   |  F7  |  F8  |  F9  |  F10 |  F11  |  F12  | |     |      |      | 
// |     |      |      |      |      |      |                   |      |      |      |      |       |       | |     |      |      | 
// |     |      |      |      |      |      |                   |      |      |      |      |       |       | |     |      |      | 
// |     |      |      |      |      |      |                   |      |      |      |      |       |       | |     |      |      | 
//                     |      |      |      |     |       |     |      |      |      |
			bindings = <
&kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6        	  &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12        &trans &trans &trans
&trans &trans &trans &trans &trans &trans       	  &trans &trans &trans &trans &trans &trans           &trans &trans &trans
&trans &trans &trans &trans &trans &trans        	  &trans &trans &trans &trans &trans &trans        	     &trans
&trans &trans &trans &trans &trans &trans        	  &trans &trans &trans &trans &trans &trans           &trans &trans &trans
		  &trans &trans &trans &trans        &trans &trans &trans &trans
			>;
		};
		
		adjust_layer {
// ---------------------------------------------------------------------------------------------------------------------------------- 
// | BT1 | BT2 | BT3 |      |      | BT_CLR |                   |      |       |       |      |       |       | |     |      |      | 
// |     |     |     |      |      |        |                   |      |       |       |      |       |       | |     |      |      | 
// |     |     |     |      |      |        |                   |      |       |       |      |       |       | |     |      |      | 
// |     |     |     |      |      |        |                   |      |       |       |      |       |       | |     |      |      | 
//                   |      |      |        |        |  |       |      |       |       |
			bindings = <
&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &trans &trans &bt BT_CLR        	&trans &trans &trans &trans &trans &trans        &trans &trans &trans
&trans &trans &trans &trans &trans &trans        			&trans &trans &trans &trans &trans &trans        &trans &trans &trans
&trans &trans &trans &trans &trans &trans        			&trans &trans &trans &trans &trans &trans        	&trans
&trans &trans &trans &trans &trans &trans       			&trans &trans &trans &trans &trans &trans        &trans &trans &trans
			&trans &trans &trans &trans        &trans &trans &trans &trans
			>;
		};
	};
};
